openapi: 3.0.0
info:
  title: Kootoro GenAI Vending Machine Verification API
  description: |
    API for the Kootoro vending machine product verification solution
    using Amazon Bedrock's multimodal capabilities to verify product placement.
  version: 1.0.0
  contact:
    name: Kootoro Support
    email: support@kootoro.ai
servers:
  - url: https://api.kootoro.ai
    description: Production server
paths:
  /api/v1/verifications/lookup:
    get:
      summary: Lookup previous verification by checking image
      description: |
        Retrieves historical verification results based on a checking image key.
        Used to find the most recent verification that used a specific checking image.
      operationId: lookupVerification
      parameters:
        - name: checkingImageUrl
          in: query
          required: true
          schema:
            type: string
          description: S3 key of the previous checking image
        - name: vendingMachineId
          in: query
          required: false
          schema:
            type: string
          description: Filter by vending machine ID
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Number of results (typically 1 for the most recent)
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            default: "verificationAt:desc"
          description: Sort order for results
      responses:
        '200':
          description: Successful lookup
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/VerificationSummary'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          description: Missing or invalid checkingImageUrl
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: No verification found for the provided checkingImageUrl
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  
  /api/v1/verifications:
    post:
      summary: Initiate a new verification
      description: |
        Initiates a new verification process. Supports both comparing a reference layout
        image to a checking image (Use Case 1) and comparing a previous checking image
        to a current checking image (Use Case 2).
      operationId: initiateVerification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/LayoutVsCheckingVerificationRequest'
                - $ref: '#/components/schemas/PreviousVsCurrentVerificationRequest'
      responses:
        '202':
          description: Verification initiated successfully
          headers:
            Location:
              schema:
                type: string
              description: URL to check verification status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationInitiatedResponse'
        '400':
          description: Missing required parameters or invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Specified image or layout not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Verification already in progress for these inputs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
    
    get:
      summary: List verification results
      description: Lists verification results with filtering options
      operationId: listVerifications
      parameters:
        - name: vendingMachineId
          in: query
          required: false
          schema:
            type: string
          description: Filter by vending machine ID
        - name: verificationStatus
          in: query
          required: false
          schema:
            type: string
            enum: [CORRECT, INCORRECT]
          description: Filter by verification status
        - name: fromDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Filter by start date (ISO 8601)
        - name: toDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Filter by end date (ISO 8601)
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 20
          description: Results per page
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: Results offset for pagination
        - name: sortBy
          in: query
          required: false
          schema:
            type: string
            default: "verificationAt:desc"
          description: Sort field and direction
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/VerificationListItem'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
      security:
        - ApiKeyAuth: []
  
  /api/v1/verifications/{verificationId}:
    get:
      summary: Get verification details
      description: Retrieves details for a specific verification
      operationId: getVerification
      parameters:
        - name: verificationId
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the verification
      responses:
        '200':
          description: Verification completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationResult'
        '202':
          description: Verification still processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationProcessing'
        '404':
          description: Verification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  
  /api/v1/verifications/{verificationId}/conversation:
    get:
      summary: Get verification conversation history
      description: Retrieves the conversation history for a verification
      operationId: getVerificationConversation
      parameters:
        - name: verificationId
          in: path
          required: true
          schema:
            type: string
          description: The unique identifier of the verification
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationHistory'
        '404':
          description: Verification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  
  /api/v1/health:
    get:
      summary: System health check
      description: Monitor system health and status
      operationId: getHealthStatus
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
        '500':
          description: System is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
      security:
        - ApiKeyAuth: []
  
  /api/v1/images/{key}/view:
    get:
      summary: Get pre-signed URL for image
      description: |
        Generates a pre-signed URL for temporary direct access to an S3 image,
        allowing the frontend to render it.
      operationId: getImagePresignedUrl
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
          description: The S3 image key (URL-encoded)
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresignedUrlResponse'
        '400':
          description: Invalid key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Image not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []
  
  /api/v1/images/browser/{path}:
    get:
      summary: Browse images in S3 bucket
      description: |
        Implements a virtual file browser for navigating S3 bucket contents
        hierarchically.
      operationId: browseImages
      parameters:
        - name: path
          in: path
          required: true
          schema:
            type: string
          description: S3 path prefix (empty for root)
        - name: bucketType
          in: query
          required: true
          schema:
            type: string
            enum: [reference, checking]
          description: Type of bucket to browse
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileBrowserResponse'
        '400':
          description: Invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - ApiKeyAuth: []

components:
  schemas:
    VerificationSummary:
      type: object
      properties:
        verificationId:
          type: string
          description: Unique identifier for the verification
          example: verif-2025042115302500
        verificationAt:
          type: string
          format: date-time
          description: Timestamp when the verification was performed
          example: 2025-04-21T15:30:25Z
        vendingMachineId:
          type: string
          description: ID of the vending machine
          example: VM-3245
        location:
          type: string
          description: Location of the vending machine
          example: Office Building A, Floor 3
        checkingImageUrl:
          type: string
          description: S3 path to the user-uploaded check image
          example: s3://kootoro-checking-bucket/2025-04-21/VM-3245/check_15-30-25.jpg
        verificationStatus:
          type: string
          enum: [CORRECT, INCORRECT]
          description: Final result of the verification
          example: INCORRECT
        machineStructure:
          $ref: '#/components/schemas/MachineStructure'
        verificationSummary:
          $ref: '#/components/schemas/VerificationSummaryStats'
      required:
        - verificationId
        - verificationAt
        - vendingMachineId
        - checkingImageUrl
        - verificationStatus
    
    MachineStructure:
      type: object
      properties:
        rowCount:
          type: integer
          description: Number of rows in the machine
          example: 6
        columnsPerRow:
          type: integer
          description: Number of columns per row
          example: 10
        columnOrder:
          type: array
          items:
            type: string
          description: Order of columns from left to right
          example: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"]
        rowOrder:
          type: array
          items:
            type: string
          description: Order of rows from top to bottom
          example: ["A", "B", "C", "D", "E", "F"]
      required:
        - rowCount
        - columnsPerRow
        - rowOrder
        - columnOrder
    
    VerificationSummaryStats:
      type: object
      properties:
        totalPositionsChecked:
          type: integer
          description: Total number of positions checked
          example: 42
        correctPositions:
          type: integer
          description: Number of positions that match the reference
          example: 28
        discrepantPositions:
          type: integer
          description: Number of positions with discrepancies
          example: 14
        missingProducts:
          type: integer
          description: Number of positions with missing products
          example: 7
        incorrectProductTypes:
          type: integer
          description: Number of positions with incorrect product types
          example: 7
        unexpectedProducts:
          type: integer
          description: Number of positions with unexpected products
          example: 0
        emptyPositionsCount:
          type: integer
          description: Number of empty positions in the checking image
          example: 7
        overallAccuracy:
          type: number
          format: float
          description: Percentage of correct positions
          example: 66.7
        overallConfidence:
          type: number
          format: float
          description: Overall confidence of the verification
          example: 97
        verificationStatus:
          type: string
          enum: [CORRECT, INCORRECT]
          description: Final result of the verification
          example: INCORRECT
        verificationOutcome:
          type: string
          description: Human-readable summary of the verification
          example: Discrepancies Detected - Row E contains incorrect product types and Row F is completely empty
      required:
        - totalPositionsChecked
        - correctPositions
        - discrepantPositions
        - overallAccuracy
        - verificationStatus
    
    LayoutVsCheckingVerificationRequest:
      type: object
      properties:
        verificationType:
          type: string
          enum: [LAYOUT_VS_CHECKING]
          description: Type of verification to perform
        referenceImageUrl:
          type: string
          description: S3 key for the reference layout image
          example: s3://kootoro-reference-bucket/processed/2025-04-21/14-25-10/23591_v1_abc_1q2w3e/image.png
        checkingImageUrl:
          type: string
          description: S3 key for the checking image
          example: s3://kootoro-checking-bucket/2025-04-21/VM-3245/check_15-30-25.jpg
        vendingMachineId:
          type: string
          description: ID of the vending machine
          example: VM-3245
        layoutId:
          type: integer
          description: Layout identifier
          example: 23591
        layoutPrefix:
          type: string
          description: Layout version prefix
          example: 1q2w3e
        notificationEnabled:
          type: boolean
          description: Whether to trigger notifications on completion
          default: false
      required:
        - verificationType
        - referenceImageUrl
        - checkingImageUrl
        - layoutId
        - layoutPrefix
    
    PreviousVsCurrentVerificationRequest:
      type: object
      properties:
        verificationType:
          type: string
          enum: [PREVIOUS_VS_CURRENT]
          description: Type of verification to perform
        referenceImageUrl:
          type: string
          description: S3 key for the previous checking image
          example: s3://kootoro-checking-bucket/2025-04-20/VM-3245/check_10-00-00.jpg
        checkingImageUrl:
          type: string
          description: S3 key for the current checking image
          example: s3://kootoro-checking-bucket/2025-04-21/VM-3245/check_15-30-25.jpg
        vendingMachineId:
          type: string
          description: ID of the vending machine
          example: VM-3245
        notificationEnabled:
          type: boolean
          description: Whether to trigger notifications on completion
          default: false
        previousVerificationId:
          type: string
          description: Optional ID of the previous verification
      required:
        - verificationType
        - referenceImageUrl
        - checkingImageUrl
    
    VerificationInitiatedResponse:
      type: object
      properties:
        verificationId:
          type: string
          description: Unique verification ID for this new run
          example: verif-2025042115302500
        verificationAt:
          type: string
          format: date-time
          description: ISO8601 timestamp of initiation
          example: 2025-04-21T15:30:25Z
        status:
          type: string
          enum: [PROCESSING]
          description: Status of the verification
          example: PROCESSING
        message:
          type: string
          description: Human-readable message
          example: Verification has been successfully initiated.
      required:
        - verificationId
        - verificationAt
        - status
    
    VerificationListItem:
      type: object
      properties:
        verificationId:
          type: string
          description: Unique identifier for the verification
          example: verif-2025042115302500
        verificationAt:
          type: string
          format: date-time
          description: Timestamp when the verification was performed
          example: 2025-04-21T15:30:25Z
        vendingMachineId:
          type: string
          description: ID of the vending machine
          example: VM-3245
        location:
          type: string
          description: Location of the vending machine
          example: Office Building A, Floor 3
        verificationStatus:
          type: string
          enum: [CORRECT, INCORRECT]
          description: Final result of the verification
          example: INCORRECT
        verificationOutcome:
          type: string
          description: Human-readable summary of the verification
          example: Discrepancies Detected - Row E contains incorrect product types and Row F is completely empty
        correctPositions:
          type: integer
          description: Number of positions that match the reference
          example: 28
        discrepantPositions:
          type: integer
          description: Number of positions with discrepancies
          example: 14
        emptyPositionsCount:
          type: integer
          description: Number of empty positions in the checking image
          example: 7
        overallAccuracy:
          type: number
          format: float
          description: Percentage of correct positions
          example: 66.7
        overallConfidence:
          type: number
          format: float
          description: Overall confidence of the verification
          example: 97
      required:
        - verificationId
        - verificationAt
        - vendingMachineId
        - verificationStatus
    
    VerificationResult:
      type: object
      properties:
        verificationId:
          type: string
          description: Unique identifier for the verification
          example: verif-2025042115302500
        verificationAt:
          type: string
          format: date-time
          description: Timestamp when the verification was performed
          example: 2025-04-21T15:30:25Z
        status:
          type: string
          enum: [COMPLETED]
          description: Status of the verification
          example: COMPLETED
        result:
          $ref: '#/components/schemas/FullVerificationResult'
        resultImageUrl:
          type: string
          description: Link to visualized result in Results Bucket
          example: s3://kootoro-results-bucket/2025-04-21/verif-2025042115302500/result.jpg
      required:
        - verificationId
        - verificationAt
        - status
        - result
    
    FullVerificationResult:
      type: object
      properties:
        verificationId:
          type: string
          description: Unique identifier for the verification
          example: verif-2025042115302500
        verificationAt:
          type: string
          format: date-time
          description: Timestamp when the verification was performed
          example: 2025-04-21T15:30:25Z
        verificationType:
          type: string
          enum: [LAYOUT_VS_CHECKING, PREVIOUS_VS_CURRENT]
          description: Type of verification performed
          example: LAYOUT_VS_CHECKING
        previousVerificationId:
          type: string
          description: ID of previous verification (for PREVIOUS_VS_CURRENT)
          example: verif-2025042010000000
        vendingMachineId:
          type: string
          description: ID of the vending machine
          example: VM-3245
        layoutId:
          type: integer
          description: ID of the layout (for LAYOUT_VS_CHECKING)
          example: 23591
        layoutPrefix:
          type: string
          description: Version of the layout (for LAYOUT_VS_CHECKING)
          example: 1q2w3e
        location:
          type: string
          description: Location of the vending machine
          example: Office Building A, Floor 3
        referenceImageUrl:
          type: string
          description: S3 path to the reference image
          example: s3://kootoro-reference-bucket/processed/2025-04-21/14-25-10/23591_v1_abc_1q2w3e/image.png
        checkingImageUrl:
          type: string
          description: S3 path to the checking image
          example: s3://kootoro-checking-bucket/2025-04-21/VM-3245/check_15-30-25.jpg
        verificationStatus:
          type: string
          enum: [CORRECT, INCORRECT]
          description: Final result of the verification
          example: INCORRECT
        machineStructure:
          $ref: '#/components/schemas/MachineStructure'
        initialConfirmation:
          type: string
          description: Summary of initial layout confirmation
          example: Successfully identified 6 physical rows based on shelf structure. A is physically highest, F is physically lowest.
        correctedRows:
          type: array
          items:
            type: string
          description: Rows where no discrepancies were found
          example: ["A", "B", "C", "D"]
        emptySlotReport:
          type: object
          properties:
            referenceEmptyRows:
              type: array
              items:
                type: string
              description: Rows that are empty in the reference image
              example: []
            checkingEmptyRows:
              type: array
              items:
                type: string
              description: Rows that are completely empty in the checking image
              example: ["F"]
            checkingPartiallyEmptyRows:
              type: array
              items:
                type: string
              description: Rows that are partially empty in the checking image
              example: []
            checkingEmptyPositions:
              type: array
              items:
                type: string
              description: Specific positions that are empty in the checking image
              example: ["F01", "F02", "F03", "F04", "F05", "F06", "F07"]
            totalEmpty:
              type: integer
              description: Total number of empty positions in the checking image
              example: 7
        referenceStatus:
          type: object
          additionalProperties:
            type: string
          description: Status of each row in the reference image
          example:
            A: "Baseline: 7 pink 'Mi Hảo Hảo' cup noodles visible."
            B: "Baseline: 7 pink 'Mi Hảo Hảo' cup noodles visible."
        checkingStatus:
          type: object
          additionalProperties:
            type: string
          description: Status of each row in the checking image
          example:
            A: "Current: 7 pink 'Mi Hảo Hảo' cup noodles visible. Status: No Change."
            B: "Current: 7 pink 'Mi Hảo Hảo' cup noodles visible. Status: No Change."
        discrepancies:
          type: array
          items:
            $ref: '#/components/schemas/Discrepancy'
        verificationSummary:
          $ref: '#/components/schemas/VerificationSummaryStats'
        metadata:
          type: object
          additionalProperties: true
          description: Additional metadata about the verification
      required:
        - verificationId
        - verificationAt
        - verificationType
        - vendingMachineId
        - referenceImageUrl
        - checkingImageUrl
        - verificationStatus
        - machineStructure
        - discrepancies
        - verificationSummary
    
    Discrepancy:
      type: object
      properties:
        position:
          type: string
          description: Position code (e.g., "A01")
          example: E01
        expected:
          type: string
          description: Expected product or state
          example: Green "Mi Cung Đình" cup noodle
        found:
          type: string
          description: Actual product or state found
          example: Red/white "Mi modern Lẩu thái" cup noodle
        issue:
          type: string
          enum: [Missing Product, Incorrect Product Type, Unexpected Product]
          description: Type of discrepancy
          example: Incorrect Product Type
        confidence:
          type: integer
          description: Confidence level (percentage)
          example: 95
        evidence:
          type: string
          description: Visual evidence for the discrepancy
          example: Different packaging color and branding visible
        verificationResult:
          type: string
          enum: [CORRECT, INCORRECT]
          description: Result for this specific position
          example: INCORRECT
      required:
        - position
        - expected
        - found
        - issue
    
    VerificationProcessing:
      type: object
      properties:
        verificationId:
          type: string
          description: Unique identifier for the verification
          example: verif-2025042115302500
        status:
          type: string
          enum: [PROCESSING]
          description: Status of the verification
          example: PROCESSING
        message:
          type: string
          description: Human-readable message
          example: Your verification is still processing. Please check back shortly.
      required:
        - verificationId
        - status
        - message
    
    ConversationHistory:
      type: object
      properties:
        verificationId:
          type: string
          description: Unique identifier for the verification
          example: verif-2025042115302500
        conversationAt:
          type: string
          format: date-time
          description: Timestamp of conversation initiation
          example: 2025-04-21T15:30:25Z
        vendingMachineId:
          type: string
          description: ID of the vending machine
          example: VM-3245
        layoutId:
          type: integer
          description: ID of the layout
          example: 23591
        layoutPrefix:
          type: string
          description: Version of the layout
          example: 1q2w3e
        currentTurn:
          type: integer
          description: Current turn in the conversation
          example: 2
        maxTurns:
          type: integer
          description: Maximum number of turns
          example: 2
        turnStatus:
          type: string
          enum: [ACTIVE, COMPLETED, FAILED]
          description: Status of the conversation
          example: COMPLETED
        history:
          type: array
          items:
            $ref: '#/components/schemas/ConversationTurn'
        expiresAt:
          type: integer
          format: int64
          description: Epoch timestamp for TTL
          example: 1745328000
        metadata:
          type: object
          additionalProperties: true
          description: Additional metadata
      required:
        - verificationId
        - conversationAt
        - vendingMachineId
        - currentTurn
        - maxTurns
        - turnStatus
        - history
    
    ConversationTurn:
      type: object
      properties:
        turnId:
          type: integer
          description: Sequential identifier for the turn
          example: 1
        timestamp:
          type: string
          format: date-time
          description: Timestamp when the turn occurred
          example: 2025-04-21T15:30:30Z
        prompt:
          type: string
          description: The prompt sent to the model
          example: The FIRST image provided ALWAYS depicts the Reference Layout (the expected state)...
        imageUrl:
          type: object
          additionalProperties:
            type: string
          description: References to images used in this turn
          example:
            reference: s3://kootoro-reference-bucket/processed/2025-04-21/14-25-10/23591_v1_abc_1q2w3e/image.png
        response:
          type: string
          description: Raw response from the model
          example: I've analyzed the reference layout image...
        latencyMs:
          type: integer
          description: Time taken to process this turn in milliseconds
          example: 2100
        tokenUsage:
          type: object
          properties:
            input:
              type: integer
              description: Input tokens used
              example: 4252
            output:
              type: integer
              description: Output tokens used
              example: 1837
            total:
              type: integer
              description: Total tokens used
              example: 6089
        analysisStage:
          type: string
          enum: [REFERENCE_ANALYSIS, CHECKING_ANALYSIS]
          description: Stage of analysis for this turn
          example: REFERENCE_ANALYSIS
      required:
        - turnId
        - timestamp
        - prompt
        - response
    
    HealthStatus:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
          description: Overall system status
          example: healthy
        version:
          type: string
          description: API version
          example: 1.2.3
        timestamp:
          type: string
          format: date-time
          description: Timestamp of the health check
          example: 2025-04-22T10:00:05Z
        services:
          type: object
          properties:
            database:
              type: object
              properties:
                status:
                  type: string
                  enum: [healthy, degraded, unhealthy]
                  example: healthy
                latency:
                  type: integer
                  description: Latency in milliseconds
                  example: 12
            storage:
              type: object
              properties:
                status:
                  type: string
                  enum: [healthy, degraded, unhealthy]
                  example: healthy
                latency:
                  type: integer
                  description: Latency in milliseconds
                  example: 48
            bedrock:
              type: object
              properties:
                status:
                  type: string
                  enum: [healthy, degraded, unhealthy]
                  example: healthy
                latency:
                  type: integer
                  description: Latency in milliseconds
                  example: 125
            lambda:
              type: object
              properties:
                status:
                  type: string
                  enum: [healthy, degraded, unhealthy]
                  example: healthy
      required:
        - status
        - version
        - timestamp
        - services
    
    PresignedUrlResponse:
      type: object
      properties:
        presignedUrl:
          type: string
          description: Pre-signed URL for temporary access to the image
          example: https://kootoro-reference-bucket.s3.amazonaws.com/processed/2025-04-21/14-25-10/23591_v1_abc_1q2w3e/image.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=...
        expiresAt:
          type: string
          format: date-time
          description: Expiration timestamp for the URL
          example: 2025-04-21T15:45:25Z
        contentType:
          type: string
          description: MIME type of the image
          example: image/png
        metadata:
          type: object
          properties:
            imageType:
              type: string
              enum: [reference, checking]
              example: reference
            fileName:
              type: string
              description: Original filename
              example: image.png
            size:
              type: integer
              description: File size in bytes
              example: 245678
      required:
        - presignedUrl
        - expiresAt
        - contentType
    
    FileBrowserResponse:
      type: object
      properties:
        currentPath:
          type: string
          description: Current path being browsed
          example: processed/2025-04-21
        parentPath:
          type: string
          description: Parent path
          example: processed
        items:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Item name
                example: 14-25-10
              type:
                type: string
                enum: [folder, image]
                description: Item type
                example: folder
              path:
                type: string
                description: Full path to the item
                example: processed/2025-04-21/14-25-10
              lastModified:
                type: string
                format: date-time
                description: Last modified timestamp
                example: 2025-04-21T14:25:15Z
              size:
                type: integer
                description: File size in bytes (for images only)
                example: 0
              thumbnailUrl:
                type: string
                description: Thumbnail URL (for images only)
                example: null
            required:
              - name
              - type
              - path
      required:
        - currentPath
        - items
    
    Pagination:
      type: object
      properties:
        total:
          type: integer
          description: Total number of items
          example: 7
        limit:
          type: integer
          description: Items per page
          example: 10
        offset:
          type: integer
          description: Current offset
          example: 0
        nextOffset:
          type: integer
          nullable: true
          description: Next offset for pagination (null if no more pages)
          example: 5
      required:
        - total
        - limit
        - offset
    
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error type
          example: ResourceNotFound
        message:
          type: string
          description: Error message
          example: The specified image could not be found
        details:
          type: object
          additionalProperties: true
          description: Additional error details
      required:
        - error
        - message

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key