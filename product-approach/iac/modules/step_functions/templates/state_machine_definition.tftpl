// modules/step_functions/templates/state_machine_definition.tftpl

{
  "Comment": "Vending Machine Verification - Enhanced Two-Turn Workflow",
  "StartAt": "ValidateInput",
  "States": {
    "ValidateInput": {
      "Type": "Pass",
      "InputPath": "$",
      "Parameters": {
        "rawInput.$": "$",
        "startTime": "$$.State.EnteredTime"
      },
      "Next": "Initialize"
    },
    "Initialize": {
      "Type": "Task",
      "Resource": "${function_arns["initialize"]}",
      "ResultPath": "$.verificationContext",
      "Parameters": {
        "input.$": "$.rawInput",
        "executionId.$": "$$.Execution.Id",
        "executionStartTime.$": "$.startTime"
      },
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "HandleInitializationError"
        }
      ],
      "Next": "UpdateStatusInitialized"
    },
    "UpdateStatusInitialized": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${dynamodb_verification_table}",
        "Key": {
          "verificationId": {
            "S.$": "$.verificationContext.verificationId"
          }
        },
        "UpdateExpression": "SET #status = :status, #updatedAt = :updatedAt, #executionId = :executionId",
        "ExpressionAttributeNames": {
          "#status": "status",
          "#updatedAt": "updatedAt",
          "#executionId": "executionId"
        },
        "ExpressionAttributeValues": {
          ":status": {
            "S": "INITIALIZED"
          },
          ":updatedAt": {
            "S.$": "$$.State.EnteredTime"
          },
          ":executionId": {
            "S.$": "$$.Execution.Id"
          }
        }
      },
      "Next": "CheckVerificationType"
    },
    "CheckVerificationType": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.verificationContext.verificationType",
          "StringEquals": "previous_vs_current",
          "Next": "FetchHistoricalVerification"
        }
      ],
      "Default": "FetchImages"
    },
    "FetchHistoricalVerification": {
      "Type": "Task",
      "Resource": "${function_arns["fetch_historical_verification"]}",
      "InputPath": "$",
      "ResultPath": "$.historicalContext",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "HandleHistoricalFetchError"
        }
      ],
      "Next": "UpdateStatusFetchingImages"
    },
    "UpdateStatusFetchingImages": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${dynamodb_verification_table}",
        "Key": {
          "verificationId": {
            "S.$": "$.verificationContext.verificationId"
          }
        },
        "UpdateExpression": "SET #status = :status, #updatedAt = :updatedAt",
        "ExpressionAttributeNames": {
          "#status": "status",
          "#updatedAt": "updatedAt"
        },
        "ExpressionAttributeValues": {
          ":status": {
            "S": "FETCHING_IMAGES"
          },
          ":updatedAt": {
            "S.$": "$$.State.EnteredTime"
          }
        }
      },
      "Next": "FetchImages"
    },
    "FetchImages": {
      "Type": "Task",
      "Resource": "${function_arns["fetch_images"]}",
      "InputPath": "$",
      "ResultPath": "$",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "HandleFetchImagesError"
        }
      ],
      "Next": "UpdateStatusAnalyzing"
    },
    "UpdateStatusAnalyzing": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${dynamodb_verification_table}",
        "Key": {
          "verificationId": {
            "S.$": "$.verificationContext.verificationId"
          }
        },
        "UpdateExpression": "SET #status = :status, #updatedAt = :updatedAt",
        "ExpressionAttributeNames": {
          "#status": "status",
          "#updatedAt": "updatedAt"
        },
        "ExpressionAttributeValues": {
          ":status": {
            "S": "ANALYZING"
          },
          ":updatedAt": {
            "S.$": "$$.State.EnteredTime"
          }
        }
      },
      "Next": "PrepareSystemPrompt"
    },
    "PrepareSystemPrompt": {
      "Type": "Task",
      "Resource": "${function_arns["prepare_system_prompt"]}",
      "InputPath": "$",
      "ResultPath": "$.systemPrompt",
      "Next": "InitializeConversationState"
    },
    "InitializeConversationState": {
      "Type": "Pass",
      "Parameters": {
        "verificationContext.$": "$.verificationContext",
        "images.$": "$.images",
        "systemPrompt.$": "$.systemPrompt",
        "historicalContext.$": "$.historicalContext",
        "conversationState": {
          "currentTurn": 0,
          "maxTurns": 2,
          "history": [],
          "referenceAnalysis": {},
          "checkingAnalysis": {}
        }
      },
      "Next": "PrepareTurn1Prompt"
    },
    "PrepareTurn1Prompt": {
      "Type": "Task",
      "Resource": "${function_arns["prepare_turn_prompt"]}",
      "InputPath": "$",
      "Parameters": {
        "verificationContext.$": "$.verificationContext",
        "images.$": "$.images",
        "systemPrompt.$": "$.systemPrompt",
        "historicalContext.$": "$.historicalContext",
        "conversationState.$": "$.conversationState",
        "turnNumber": 1,
        "includeImage": "reference"
      },
      "ResultPath": "$.currentPrompt",
      "Next": "SaveConversationTurn1Start"
    },
    "SaveConversationTurn1Start": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "${dynamodb_conversation_table}",
        "Item": {
          "verificationId": {
            "S.$": "$.verificationContext.verificationId"
          },
          "conversationAt": {
            "S.$": "$$.State.EnteredTime"
          },
          "turnId": {
            "N": "1"
          },
          "turnStatus": {
            "S": "STARTED"
          },
          "prompt": {
            "S.$": "States.JsonToString($.currentPrompt)"
          },
          "analysisStage": {
            "S": "REFERENCE_ANALYSIS"
          },
          "timestamp": {
            "S.$": "$$.State.EnteredTime"
          }
        }
      },
      "Next": "ExecuteTurn1"
    },
    "ExecuteTurn1": {
      "Type": "Task",
      "Resource": "${function_arns["invoke_bedrock"]}",
      "InputPath": "$",
      "ResultPath": "$.turn1Response",
      "Retry": [
        {
          "ErrorEquals": ["ServiceException", "ThrottlingException"],
          "IntervalSeconds": 3,
          "MaxAttempts": 5,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "HandleBedrockError"
        }
      ],
      "Next": "SaveConversationTurn1Complete"
    },
    "SaveConversationTurn1Complete": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${dynamodb_conversation_table}",
        "Key": {
          "verificationId": {
            "S.$": "$.verificationContext.verificationId"
          },
          "turnId": {
            "N": "1"
          }
        },
        "UpdateExpression": "SET #turnStatus = :turnStatus, #response = :response, #completedAt = :completedAt",
        "ExpressionAttributeNames": {
          "#turnStatus": "turnStatus",
          "#response": "response",
          "#completedAt": "completedAt"
        },
        "ExpressionAttributeValues": {
          ":turnStatus": {
            "S": "COMPLETED"
          },
          ":response": {
            "S.$": "States.JsonToString($.turn1Response)"
          },
          ":completedAt": {
            "S.$": "$$.State.EnteredTime"
          }
        }
      },
      "Next": "ProcessTurn1Response"
    },
    "ProcessTurn1Response": {
      "Type": "Task",
      "Resource": "${function_arns["process_turn1_response"]}",
      "InputPath": "$",
      "ResultPath": "$.referenceAnalysis",
      "Next": "UpdateConversationStateAfterTurn1"
    },
    "UpdateConversationStateAfterTurn1": {
      "Type": "Pass",
      "Parameters": {
        "verificationContext.$": "$.verificationContext",
        "images.$": "$.images",
        "systemPrompt.$": "$.systemPrompt",
        "historicalContext.$": "$.historicalContext",
        "currentPrompt.$": "$.currentPrompt",
        "turn1Response.$": "$.turn1Response",
        "referenceAnalysis.$": "$.referenceAnalysis",
        "conversationState": {
          "currentTurn": 1,
          "maxTurns": 2,
          "history.$": "States.Array($.conversationState.history, $.turn1Response)",
          "referenceAnalysis.$": "$.referenceAnalysis",
          "checkingAnalysis.$": "$.conversationState.checkingAnalysis"
        }
      },
      "Next": "PrepareTurn2Prompt"
    },
    "PrepareTurn2Prompt": {
      "Type": "Task",
      "Resource": "${function_arns["prepare_turn_prompt"]}",
      "InputPath": "$",
      "Parameters": {
        "verificationContext.$": "$.verificationContext",
        "images.$": "$.images",
        "systemPrompt.$": "$.systemPrompt",
        "historicalContext.$": "$.historicalContext",
        "conversationState.$": "$.conversationState",
        "turnNumber": 2,
        "includeImage": "checking",
        "previousContext.$": "$.referenceAnalysis"
      },
      "ResultPath": "$.currentPrompt",
      "Next": "SaveConversationTurn2Start"
    },
    "SaveConversationTurn2Start": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "${dynamodb_conversation_table}",
        "Item": {
          "verificationId": {
            "S.$": "$.verificationContext.verificationId"
          },
          "conversationAt": {
            "S.$": "$$.State.EnteredTime"
          },
          "turnId": {
            "N": "2"
          },
          "turnStatus": {
            "S": "STARTED"
          },
          "prompt": {
            "S.$": "States.JsonToString($.currentPrompt)"
          },
          "analysisStage": {
            "S": "CHECKING_ANALYSIS"
          },
          "timestamp": {
            "S.$": "$$.State.EnteredTime"
          }
        }
      },
      "Next": "ExecuteTurn2"
    },
    "ExecuteTurn2": {
      "Type": "Task",
      "Resource": "${function_arns["invoke_bedrock"]}",
      "InputPath": "$",
      "ResultPath": "$.turn2Response",
      "Retry": [
        {
          "ErrorEquals": ["ServiceException", "ThrottlingException"],
          "IntervalSeconds": 3,
          "MaxAttempts": 5,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "HandleBedrockError"
        }
      ],
      "Next": "SaveConversationTurn2Complete"
    },
    "SaveConversationTurn2Complete": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${dynamodb_conversation_table}",
        "Key": {
          "verificationId": {
            "S.$": "$.verificationContext.verificationId"
          },
          "turnId": {
            "N": "2"
          }
        },
        "UpdateExpression": "SET #turnStatus = :turnStatus, #response = :response, #completedAt = :completedAt",
        "ExpressionAttributeNames": {
          "#turnStatus": "turnStatus",
          "#response": "response",
          "#completedAt": "completedAt"
        },
        "ExpressionAttributeValues": {
          ":turnStatus": {
            "S": "COMPLETED"
          },
          ":response": {
            "S.$": "States.JsonToString($.turn2Response)"
          },
          ":completedAt": {
            "S.$": "$$.State.EnteredTime"
          }
        }
      },
      "Next": "ProcessTurn2Response"
    },
    "HandleBedrockError": {
      "Type": "Task",
      "Resource": "${function_arns["handle_bedrock_error"]}",
      "InputPath": "$",
      "ResultPath": "$",
      "Next": "UpdateStatusError"
    },
    "UpdateStatusError": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${dynamodb_verification_table}",
        "Key": {
          "verificationId": {
            "S.$": "$.verificationContext.verificationId"
          }
        },
        "UpdateExpression": "SET #status = :status, #errorDetails = :errorDetails, #updatedAt = :updatedAt",
        "ExpressionAttributeNames": {
          "#status": "status",
          "#errorDetails": "errorDetails",
          "#updatedAt": "updatedAt"
        },
        "ExpressionAttributeValues": {
          ":status": {
            "S": "FAILED"
          },
          ":errorDetails": {
            "S.$": "States.JsonToString($.error)"
          },
          ":updatedAt": {
            "S.$": "$$.State.EnteredTime"
          }
        }
      },
      "Next": "FinalizeWithError"
    },
    "FinalizeWithError": {
      "Type": "Task",
      "Resource": "${function_arns["finalize_with_error"]}",
      "InputPath": "$",
      "ResultPath": "$.finalResults",
      "Next": "StoreResults"
    },
    "ProcessTurn2Response": {
      "Type": "Task",
      "Resource": "${function_arns["process_turn2_response"]}",
      "InputPath": "$",
      "ResultPath": "$.checkingAnalysis",
      "Next": "UpdateConversationStateAfterTurn2"
    },
    "UpdateConversationStateAfterTurn2": {
      "Type": "Pass",
      "Parameters": {
        "verificationContext.$": "$.verificationContext",
        "images.$": "$.images",
        "systemPrompt.$": "$.systemPrompt",
        "historicalContext.$": "$.historicalContext",
        "currentPrompt.$": "$.currentPrompt",
        "turn1Response.$": "$.turn1Response",
        "turn2Response.$": "$.turn2Response",
        "referenceAnalysis.$": "$.referenceAnalysis",
        "checkingAnalysis.$": "$.checkingAnalysis",
        "conversationState": {
          "currentTurn": 2,
          "maxTurns": 2,
          "history.$": "States.Array($.conversationState.history, $.turn2Response)",
          "referenceAnalysis.$": "$.referenceAnalysis",
          "checkingAnalysis.$": "$.checkingAnalysis"
        }
      },
      "Next": "FinalizeResults"
    },
    "FinalizeResults": {
      "Type": "Task",
      "Resource": "${function_arns["finalize_results"]}",
      "InputPath": "$",
      "ResultPath": "$.finalResults",
      "Next": "UpdateStatusProcessingResults"
    },
    "UpdateStatusProcessingResults": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${dynamodb_verification_table}",
        "Key": {
          "verificationId": {
            "S.$": "$.verificationContext.verificationId"
          }
        },
        "UpdateExpression": "SET #status = :status, #updatedAt = :updatedAt",
        "ExpressionAttributeNames": {
          "#status": "status",
          "#updatedAt": "updatedAt"
        },
        "ExpressionAttributeValues": {
          ":status": {
            "S": "PROCESSING_RESULTS"
          },
          ":updatedAt": {
            "S.$": "$$.State.EnteredTime"
          }
        }
      },
      "Next": "StoreResults"
    },
    "StoreResults": {
      "Type": "Task",
      "Resource": "${function_arns["store_results"]}",
      "InputPath": "$",
      "ResultPath": "$.storageResult",
      "Next": "UpdateStatusCompleted"
    },
    "UpdateStatusCompleted": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${dynamodb_verification_table}",
        "Key": {
          "verificationId": {
            "S.$": "$.verificationContext.verificationId"
          }
        },
        "UpdateExpression": "SET #status = :status, #completedAt = :completedAt, #processingTimeMs = :processingTimeMs",
        "ExpressionAttributeNames": {
          "#status": "status",
          "#completedAt": "completedAt",
          "#processingTimeMs": "processingTimeMs"
        },
        "ExpressionAttributeValues": {
          ":status": {
            "S": "COMPLETED"
          },
          ":completedAt": {
            "S.$": "$$.State.EnteredTime"
          },
          ":processingTimeMs": {
            "N.$": "States.JsonToString(States.TimestampDiff($.startTime, $$.State.EnteredTime, 'Milliseconds'))"
          }
        }
      },
      "Next": "ShouldNotify"
    },
    "ShouldNotify": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.verificationContext.notificationEnabled",
          "BooleanEquals": true,
          "Next": "Notify"
        }
      ],
      "Default": "WorkflowComplete"
    },
    "Notify": {
      "Type": "Task",
      "Resource": "${function_arns["notify"]}",
      "InputPath": "$",
      "ResultPath": "$.notificationResult",
      "Next": "WorkflowComplete"
    },
    "WorkflowComplete": {
      "Type": "Pass",
      "Parameters": {
        "verificationId.$": "$.verificationContext.verificationId",
        "verificationType.$": "$.verificationContext.verificationType",
        "status": "COMPLETED",
        "timestamp.$": "$$.State.EnteredTime",
        "result": {
          "verificationStatus.$": "$.finalResults.verificationStatus",
          "resultImageUrl.$": "$.storageResult.resultImageUrl",
          "confidenceScore.$": "$.finalResults.confidenceScore",
          "discrepanciesCount.$": "$.finalResults.discrepanciesCount",
          "processingTimeMs.$": "States.TimestampDiff($.startTime, $$.State.EnteredTime, 'Milliseconds')"
        }
      },
      "ResultPath": "$.apiResponse",
      "End": true
    },
    "HandleInitializationError": {
      "Type": "Pass",
      "Result": {
        "status": "FAILED",
        "error": "Failed to initialize verification process"
      },
      "End": true
    },
    "HandleHistoricalFetchError": {
      "Type": "Pass",
      "Result": {
        "status": "FAILED",
        "error": "Failed to retrieve historical verification data"
      },
      "End": true
    },
    "HandleFetchImagesError": {
      "Type": "Pass",
      "Result": {
        "status": "FAILED",
        "error": "Failed to fetch images or metadata"
      },
      "End": true
    }
  }
}