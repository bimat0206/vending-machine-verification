# infrastructure/modules/step_functions/state_machine_definition.json.tftpl

{
  "Comment": "Vending Machine Image Verification Workflow",
  "StartAt": "Initialize",
  "States": {
    "Initialize": {
      "Type": "Task",
      "Resource": "${initialize_function_arn}",
      "Next": "FetchImages",
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "WorkflowFailed"
        }
      ]
    },
    "FetchImages": {
      "Type": "Task",
      "Resource": "${fetch_images_function_arn}",
      "Next": "PreparePrompt",
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "WorkflowFailed"
        }
      ]
    },
    "PreparePrompt": {
      "Type": "Task",
      "Resource": "${prepare_prompt_function_arn}",
      "Next": "InvokeBedrock",
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "WorkflowFailed"
        }
      ]
    },
    "InvokeBedrock": {
      "Type": "Task",
      "Resource": "${invoke_bedrock_function_arn}",
      "Next": "ProcessResults",
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "WorkflowFailed"
        }
      ]
    },
    "ProcessResults": {
      "Type": "Task",
      "Resource": "${process_results_function_arn}",
      "Next": "StoreResults",
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "WorkflowFailed"
        }
      ]
    },
    "StoreResults": {
      "Type": "Task",
      "Resource": "${store_results_function_arn}",
      "Next": "Notify",
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "WorkflowFailed"
        }
      ]
    },
    "Notify": {
      "Type": "Task",
      "Resource": "${notify_function_arn}",
      "End": true,
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "WorkflowFailed"
        }
      ]
    },
    "WorkflowFailed": {
      "Type": "Fail",
      "Error": "WorkflowFailedError",
      "Cause": "One of the workflow steps failed. Check the error details."
    }
  }
}