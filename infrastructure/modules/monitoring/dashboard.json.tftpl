# infrastructure/modules/monitoring/dashboard.json.tftpl
{
  "widgets": [
    {
      "type": "text",
      "x": 0,
      "y": 0,
      "width": 24,
      "height": 1,
      "properties": {
        "markdown": "# Vending Machine Verification System Dashboard"
      }
    },
    {
      "type": "metric",
      "x": 0,
      "y": 1,
      "width": 12,
      "height": 6,
      "properties": {
        "metrics": [
          %{ for lambda_function in lambda_functions ~}
          [ "AWS/Lambda", "Invocations", "FunctionName", "${lambda_function}" ],
          %{ endfor ~}
        ],
        "view": "timeSeries",
        "stacked": false,
        "region": "${region}",
        "title": "Lambda Invocations",
        "period": 60,
        "stat": "Sum"
      }
    },
    {
      "type": "metric",
      "x": 12,
      "y": 1,
      "width": 12,
      "height": 6,
      "properties": {
        "metrics": [
          %{ for lambda_function in lambda_functions ~}
          [ "AWS/Lambda", "Errors", "FunctionName", "${lambda_function}" ],
          %{ endfor ~}
        ],
        "view": "timeSeries",
        "stacked": false,
        "region": "${region}",
        "title": "Lambda Errors",
        "period": 60,
        "stat": "Sum"
      }
    },
    {
      "type": "metric",
      "x": 0,
      "y": 7,
      "width": 12,
      "height": 6,
      "properties": {
        "metrics": [
          %{ for lambda_function in lambda_functions ~}
          [ "AWS/Lambda", "Duration", "FunctionName", "${lambda_function}" ],
          %{ endfor ~}
        ],
        "view": "timeSeries",
        "stacked": false,
        "region": "${region}",
        "title": "Lambda Duration",
        "period": 60,
        "stat": "Average",
        "yAxis": {
          "left": {
            "min": 0
          }
        }
      }
    },
    {
      "type": "metric",
      "x": 12,
      "y": 7,
      "width": 12,
      "height": 6,
      "properties": {
        "metrics": [
          [ "AWS/States", "ExecutionsStarted", "StateMachineArn", "${state_machine_arn}" ],
          [ "AWS/States", "ExecutionsSucceeded", "StateMachineArn", "${state_machine_arn}" ],
          [ "AWS/States", "ExecutionsFailed", "StateMachineArn", "${state_machine_arn}" ],
          [ "AWS/States", "ExecutionsTimedOut", "StateMachineArn", "${state_machine_arn}" ]
        ],
        "view": "timeSeries",
        "stacked": false,
        "region": "${region}",
        "title": "Step Functions Executions",
        "period": 60,
        "stat": "Sum"
      }
    },
    {
      "type": "metric",
      "x": 0,
      "y": 13,
      "width": 12,
      "height": 6,
      "properties": {
        "metrics": [
          [ "AWS/ApiGateway", "Count", "ApiName", "${api_gateway_api_name}", "Stage", "${api_gateway_stage_name}" ],
          [ "AWS/ApiGateway", "4XXError", "ApiName", "${api_gateway_api_name}", "Stage", "${api_gateway_stage_name}" ],
          [ "AWS/ApiGateway", "5XXError", "ApiName", "${api_gateway_api_name}", "Stage", "${api_gateway_stage_name}" ]
        ],
        "view": "timeSeries",
        "stacked": false,
        "region": "${region}",
        "title": "API Gateway Requests",
        "period": 60,
        "stat": "Sum"
      }
    },
    {
      "type": "metric",
      "x": 12,
      "y": 13,
      "width": 12,
      "height": 6,
      "properties": {
        "metrics": [
          [ "AWS/ApiGateway", "Latency", "ApiName", "${api_gateway_api_name}", "Stage", "${api_gateway_stage_name}" ],
          [ "AWS/ApiGateway", "IntegrationLatency", "ApiName", "${api_gateway_api_name}", "Stage", "${api_gateway_stage_name}" ]
        ],
        "view": "timeSeries",
        "stacked": false,
        "region": "${region}",
        "title": "API Gateway Latency",
        "period": 60,
        "stat": "Average",
        "yAxis": {
          "left": {
            "min": 0
          }
        }
      }
    },
    {
      "type": "metric",
      "x": 0,
      "y": 19,
      "width": 12,
      "height": 6,
      "properties": {
        "metrics": [
          [ "AWS/DynamoDB", "ConsumedReadCapacityUnits", "TableName", "${dynamodb_table}" ],
          [ "AWS/DynamoDB", "ConsumedWriteCapacityUnits", "TableName", "${dynamodb_table}" ]
        ],
        "view": "timeSeries",
        "stacked": false,
        "region": "${region}",
        "title": "DynamoDB Capacity Consumption",
        "period": 60,
        "stat": "Sum"
      }
    },
    {
      "type": "metric",
      "x": 12,
      "y": 19,
      "width": 12,
      "height": 6,
      "properties": {
        "metrics": [
          [ "AWS/S3", "AllRequests", "BucketName", "${s3_bucket_name}" ],
          [ "AWS/S3", "GetRequests", "BucketName", "${s3_bucket_name}" ],
          [ "AWS/S3", "PutRequests", "BucketName", "${s3_bucket_name}" ]
        ],
        "view": "timeSeries",
        "stacked": false,
        "region": "${region}",
        "title": "S3 Bucket Requests",
        "period": 60,
        "stat": "Sum"
      }
    }
  ]
}